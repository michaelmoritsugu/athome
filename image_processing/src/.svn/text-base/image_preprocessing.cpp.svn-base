#include <ros/ros.h>
#include <sensor_msgs/Image.h>

class PublisherClass
{

private:
	ros::Publisher pub;
	ros::NodeHandle nh;

public: PublisherClass(ros::NodeHandle n)
{
	nh = n;
  	pub = n.advertise<sensor_msgs::Image>("processed_image", 1000);
}


public: void processingCallback(const sensor_msgs::Image::ConstPtr& msg)
{
// TODO: Preprocessing
ROS_INFO("%d", msg->height);
}

};


int main(int argc, char** argv)
{

ros::init(argc, argv, "image_preprocessing");
ros::NodeHandle n;

PublisherClass pubClass(n);
ros::Subscriber sub = n.subscribe("rgb/image_raw", 100, &PublisherClass::processingCallback, &pubClass); 

ros::spin();
return 0;
}

